server {
  listen 80;

  location /auth {
    proxy_pass http://vouch:9090;
  }
  
  location /login {
    proxy_pass http://vouch:9090;
  }
  
  # Proxy requests to the bucket "revstorage" to MinIO server running on port 8001
  location /vouch-validate {

    # This address is where Vouch will be listening on
    proxy_pass http://vouch:9090/validate;

    proxy_set_header Host $http_host;

    proxy_pass_request_body off; # no need to send the POST body
    proxy_set_header Content-Length "";

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    #set the vouch user
#    auth_request_set $auth_resp_x_vouch_user $upstream_http_x_vouch_user;


    # these return values are passed to the @error401 call
    auth_request_set $auth_resp_jwt $upstream_http_x_vouch_jwt;
    auth_request_set $auth_resp_err $upstream_http_x_vouch_err;
    auth_request_set $auth_resp_failcount $upstream_http_x_vouch_failcount;

  }

  error_page 401 = @error401;

  # If the user is not logged in, redirect them to Vouch's login URL
  location @error401 {
    return 302 http://localhost:8082/login?url=http://$http_host$request_uri&vouch-failcount=$auth_resp_failcount&X-Vouch-Token=$auth_resp_jwt&error=$auth_resp_err;
  }

  # Proxy any other request to the application server running on port 5000
  location / {
  
    # Any request to this server will first be sent to this URL
    auth_request /vouch-validate;

    auth_request_set $auth_user $upstream_http_x_vouch_user;
  
    proxy_set_header Host $http_host;

    proxy_set_header X-Vouch-User $auth_user;

    proxy_pass http://host.docker.internal:5000;
  }

 }